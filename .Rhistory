install.packages("tidyverse")
library(tidyverse)
iris
summary(iris)
plot(iris)
plot(iris$Sepal.Length)
data = iris
summary(data)
plot(data)
plot(data$Sepal.Width~data&Sepal.Lenght)
dat = iris
summary(dat)
plot(data)
dataSetosa = data.class(dat$Species)
dr =  dat$Species
summary(dr)
plot(dr$setosa)
plot(dr$setosa)
dr = iris %>% group_by( Species) %>% summarise(Avg.Sepal.Ratio = mean(Sepal.Length/Sepal.Length), Avg.Sepal.Ratio = mean(Petal.Length/
Petal.Width ))
dr %>% gather(ratio, value,-Species)
plot(Petal.Length, Species)
dat$Species<- factor(dat$Species)
summary(dat)
str(dat)
dat.Setosa <- subset(dat, Species= "setosa")
plot(dat.Setosa)
plot(dat.Setosa)
boxplot(dat.Setosa)
plot(dat.Setosa)
str(dat.Setosa)
dat.Setosa<-droplevels(dat.Setosa)
str(dat.Setosa)
boxplot(dat.Setosa)
plot(dat.Setosa)
boxplot(dat.Setosa)
dat.versicolor <-droplevels(dat.vesicolor)
# species versicolor
dat.vesicolor <- subset(dat, Species="versicolor")
dat.versicolor <-droplevels(dat.vesicolor)
# species versicolor
dat.vesicolor <- subset(dat, Species="versicolor")
dat.vesicolor <-droplevels(dat.vesicolor)
str(dat.vesicolor)
dat.Setosa$Species <- subset(dat, Species= "setosa")
dat.Setosa$Species <- subset(dat, Species= "setosa")
dat.Setosa$Species<-droplevels(dat.Setosa$Species)
str(dat.Setosa)
boxplot(dat.Setosa)
levels(dat.Setosa)
dat = iris
dat <- iris
summary(dat)
plot(data)
dr = iris %>% group_by( Species) %>% summarise(Avg.Sepal.Ratio = mean(Sepal.Length/Sepal.Length), Avg.Sepal.Ratio = mean(Petal.Length/
Petal.Width ))
dr %>% gather(ratio, value,-Species)
dat$Species<- factor(dat$Species)
str(dat)
dat.Setosa$Species <- subset(dat, Species= "setosa")
dat.Setosa$Species<-droplevels(dat.Setosa$Species)
levels(dat.Setosa)
levels(dat.Setosa$Species)
dat$Species<- factor(dat$Species)
levels(dat$Species)
dat.Setosa$Species <- subset(dat, Species= "setosa")
levels(dat.Setosa$Species)
dat.Setosa$Species<-droplevels(dat.Setosa$Species)
levels(dat.Setosa$Species)
boxplot(dat.Setosa)
boxplot(Sepal.Lenght,dat.Setosa)
plot(Sepal.Lenght~Species,dat)
boxplot(Sepal.Lenght~Species,dat)
boxplot(dat$Sepal.Lenght~Species,dat)
boxplot(dat)
dat <- iris
summary(dat)
plot(data)
dat$Species<- factor(dat$Species)
levels(dat$Species)
boxplot(Sepal.Length~Species,dat)
boxplot(Sepal.With~Species,dat)
# petal
boxplot(Petal.Length~Species,dat)
boxplot(Petal.With~Species,dat)
boxplot(Petal.With~Species,dat, horizontal = True)
# 1 import iris data set
dat <- iris
# 2  summaries iris dataset
summary(dat)
# 3 plot iris dataset
plot(data)
dat$Species<- factor(dat$Species)
levels(dat$Species)
# sepal
boxplot(Sepal.Length~Species,dat)
# sepal
boxplot(Sepal.Length~Species,dat)
boxplot(Sepal.With~Species,dat)
# petal
boxplot(Petal.Length~Species,dat)
boxplot(Petal.With~Species,dat, horizontal = True)
dat.Setosa = subset(dat, Species=="setosa")
summary(dat.Setosa)
dat.Setosa <- subset(dat, Species=="setosa")
dat.Setosa$Species <-droplevels(dat.Setosa$Species)
summary(dat.Setosa)
plot(dat.Setosa)
plot(dat.Setosa$Sepal.Length,dat.Setosa$Sepal.Width)
plot(dat.Setosa$Sepal.Length,dat.Setosa$Petal.Length)
plot(dat.Setosa$Sepal.Length,dat.Setosa$Petal.Width)
plot(dat.Setosa)
plot(dat.Setosa$Petal.Length,dat.Setosa$Petal.Width)
dat.ver <- subset(dat, Species=="versicolora")
dat.ver$Species <-droplevels(dat.ver$Species)
summary(dat.ver)
plot(dat.ver)
dat.ver <- subset(dat, Species=="versicolor")
dat.ver$Species <-droplevels(dat.ver$Species)
summary(dat.ver)
plot(dat.ver)
plot(dat.ver$Sepal.Length,dat.ver$Sepal.Width)
plot(dat.ver$Sepal.Length,dat.ver$Petal.Length)
plot(dat.ver$Sepal.Length,dat.ver$Petal.Width)
plot(dat.ver$Petal.Length,dat.ver$Petal.Width)
dr = iris %>% group_by( Species) %>% summarise(Avg.Sepal.Ratio = mean(Sepal.Length/Sepal.Length), Avg.Sepal.Ratio = mean(Petal.Length/
Petal.Width ))
library(tidyverse)
geom_point(mapping = aes(x=iris$Sepal.Length,y=iris$Sepal.Width,color=Species)
ggplot(data=iris)+
geom_point(mapping = aes(x=iris$Sepal.Length,y=iris$Sepal.Width,color=Species))
ggplot(data=iris)+
geom_point(mapping = aes(x=iris$Sepal.Length,y=iris$Sepal.Width,color=iris$Species))
ggplot(data=iris)+
geom_point(mapping = aes(x=Sepal.Length,y=Sepal.Width,color=Species))
install.packages("tidyverse")
library(tidyverse)
install.packages("rpart")
library(rpart)
library(mrl)
install.packages("mlr")
library(mrl)
library(mlr)
library(mlr3)
install.packages("mlr3")
# set options
options(stringsAsFactors = F)         # no automatic data transformation
options("scipen" = 100, "digits" = 4) # supress math annotation
# load packages
library(knitr)
library(kableExtra)
library(DT)
library(tm)
library(topicmodels)
library(reshape2)
library(ggplot2)
library(wordcloud)
library(pals)
library(SnowballC)
library(lda)
library(ldatuning)
library(tidyverse)
library(flextable)
library(qdapRegex)
# activate klippy for copy-to-clipboard button
klippy::klippy()
library("spacyr")
spacy_initialize(model = "it_core_news_sm")
setwd("D:/University of Trieste/project/Corpus_analysis")
file_name <- "data/carteggio.svevo3.csv"
corpus <- read.csv(file_name, sep=';', encoding = "UTF-8")
corpus %>%
str
corpus$mainLanguage<-as.factor(corpus$mainLanguage)
corpus$sender<-as.factor(corpus$sender)
corpus$year<-as.factor(corpus$year)
# Let's filter the dataset
corpus_it<- dplyr::filter(corpus, mainLanguage %in%c("ITA"))
fin_corpus<- select(corpus_it, year, text, sender)
#fin_corpus<-filter(fin_corpus, !(year %in% c("1921","1924")))
fin_corpus <-droplevels(fin_corpus)
gt<-levels(fin_corpus$year)
l <-as.character(paste0(fin_corpus$text))
parsedtxt <- gsub("[^[:alnum:]]", " ", l) %>%
tolower() %>% rm_number()
# Let's transforme the text to tible
library(stm)
library(quanteda)
#install.packages("tidytext")
library(tidytext)
text_df <- tibble(line = fin_corpus$year, text = parsedtxt)
#view(text_df)
processedCorpus <- tm_map(text_df , content_transformer(tolower))
tweets_byusers_corpus <- iconv(text_df$text)
view(tweets_byusers_corpus)
corpus <- Corpus(VectorSource(tweets_byusers_corpus))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus,removeWords,stopwords::stopwords("Italian"))
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus,stripWhitespace)
dtm <- DocumentTermMatrix(corpus)
rowTotals<-apply(dtm,1,sum) #running this line takes time
dtm <- DocumentTermMatrix(corpus)
#the line above will convert corpus to DTM. But we need to run the next four lines
#to remove empty document from DTM to prevent potential errors.
#A DTM is a matrix, with documents in the rows and terms in the columns.
inspect(dtm)
dtm.mx <- as.matrix(dtm)
frequency <- colSums(dtm.mx)
print(dtm.mx)
dtm.mx <- as.matrix(dtm)
frequency <- colSums(dtm.mx)
frequency <- sort(frequency, decreasing=TRUE)
frequency[1:25]
burnin <- 4000
iter <- 2000
thin <- 500
seed <-list(2003,5,63,100001,765)
nstart <- 5
best <- TRUE
k <- 5 #find 5 topics
ldaOut <-LDA(dtm,k, method="Gibbs", control=list(nstart=nstart, seed = seed, best=best, burnin = burnin, iter = iter, thin=thin))
ldaOut.terms <- as.matrix(terms(ldaOut,6))
write.csv(ldaOut.terms,file=paste("topic_model",k,"TopicsToTerms.csv"))
ldaOut.terms[1:6,]
tweets_byusers_corpus <- iconv(text_df$text,"UTF-8")
view(tweets_byusers_corpus)
corpus <- Corpus(VectorSource(tweets_byusers_corpus))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus,removeWords,stopwords::stopwords("Italian"))
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus,stripWhitespace)
dtm <- DocumentTermMatrix(corpus)
dtm.mx <- as.matrix(dtm)
frequency <- colSums(dtm.mx)
frequency <- sort(frequency, decreasing=TRUE)
frequency[1:25]
burnin <- 4000
iter <- 200
thin <- 500
seed <-list(2003,5,63,100001,765)
nstart <- 5
best <- TRUE
k <- 5 #find 5 topics
ldaOut <-LDA(dtm,k, method="Gibbs", control=list(nstart=nstart, seed = seed, best=best, burnin = burnin, iter = iter, thin=thin))
iter <- 2000
thin <- 500
seed <-list(2003,5,63,100001,765)
nstart <- 5
best <- TRUE
k <- 5 #find 5 topics
ldaOut <-LDA(dtm,k, method="Gibbs", control=list(nstart=nstart, seed = seed, best=best, burnin = burnin, iter = iter, thin=thin))
ldaOut.terms <- as.matrix(terms(ldaOut,6))
write.csv(ldaOut.terms,file=paste("topic_model",k,"TopicsToTerms.csv"))
ldaOut.terms[1:6,]
ldaOut.terms[1:7,]
ldaOut.terms[1:6,]
ldaOut.terms
